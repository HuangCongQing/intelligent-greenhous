///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        11/Dec/2018  09:58:01 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01 /
//                          -ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4 /
//                          .0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater\ /
//                          CC2530DB\Coordinator.c                            /
//    Command line       =  -f "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\To /
//                          ols\CC2530DB\f8wCoord.cfg" (-DCPU32MHZ            /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\To /
//                          ols\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO          /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1010                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03 /
//                          -≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas       /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\Coordinator /
//                          .c" -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D      /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\CoordinatorEB\List\" -lA                /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\CoordinatorEB\List\" --diag_suppress    /
//                          Pe001,Pa010 -o "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æ /
//                          ﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas               /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\Coordinator /
//                          EB\Obj\" -e --no_code_motion --debug              /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æ /
//                          ﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas               /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\Source\" /
//                           -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙ /
//                          ¬Î\01-ZigBee–≠“È’ª\Texas                          /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\ZM /
//                          ain\TI2530DB\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√ /
//                          π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas            /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\hal\include\" -I                   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\hal\target\CC /
//                          2530EB\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\0 /
//                          3-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas                  /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\mac\include\" -I                   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\mac\high_leve /
//                          l\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ /
//                          ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas                       /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\mac\low_level\srf04\" -I           /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\mac\low_level /
//                          \srf04\single_chip\" -I                           /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\mt\" -I       /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\osal\include\ /
//                          " -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥ /
//                          ˙¬Î\01-ZigBee–≠“È’ª\Texas                         /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\osal\mcu\ccsoc\" -I                /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\services\sadd /
//                          r\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ /
//                          ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas                       /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\services\sdata\" -I                /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\stack\af\"    /
//                          -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\stack\nwk\" -I                     /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\stack\sapi\"  /
//                          -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\stack\sec\" -I                     /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\stack\sys\"   /
//                          -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\HumiTemp_Heater\CC2530DB\..\..\..\.. /
//                          \..\Components\stack\zdo\" -I                     /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\zmac\" -I     /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater /
//                          \CC2530DB\..\..\..\..\..\Components\zmac\f8w\"    /
//                          -Ohz --require_prototypes                         /
//    List file          =  F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01 /
//                          -ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4 /
//                          .0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater\ /
//                          CC2530DB\CoordinatorEB\List\Coordinator.s51       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Coordinator

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_MessageMSGCB?relay
        FUNCTION ??GenericApp_MessageMSGCB?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        FUNCTION ??rxCB?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GenericApp_MessageMSGCB
        FUNCTION GenericApp_MessageMSGCB,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 142, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        PUBLIC addr
        PUBLIC nodenum
        FUNCTION rxCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 161, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
afRegister          SYMBOL "afRegister"
HalUARTOpen         SYMBOL "HalUARTOpen"
HalLedBlink         SYMBOL "HalLedBlink"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
HalLedSet           SYMBOL "HalLedSet"
osal_memcpy         SYMBOL "osal_memcpy"
HalUARTWrite        SYMBOL "HalUARTWrite"
HalUARTRead         SYMBOL "HalUARTRead"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_MessageMSGCB SYMBOL "GenericApp_MessageMSGCB"
??GenericApp_MessageMSGCB?relay SYMBOL "?relay", GenericApp_MessageMSGCB
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 155, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 139, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 152, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 161, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H

// F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\HumiTemp_Heater\CC2530DB\Coordinator.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDProfile.h"
//    5 #include "ZDObject.h"
//    6 #include <string.h>
//    7 #include "Coordinator.h"
//    8 #include "DebugTrace.h"
//    9 
//   10 #if !defined(WIN32)
//   11 #include "OnBoard.h"
//   12 #endif
//   13 
//   14 #include "hal_lcd.h"
//   15 #include "hal_led.h"
//   16 #include "hal_key.h"
//   17 #include "hal_uart.h"
//   18 #include "OSAL_Nv.h"
//   19 #include "aps_groups.h"
//   20 
//   21 #define SEND_TO_ALL_EVENT 0X01
//   22 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
//   23 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS]  = 
GenericApp_ClusterList:
        DATA16
        DW 1
        DW 2
//   24 {
//   25   GENERICAPP_CLUSTERID_1,GENERICAPP_CLUSTERID_2
//   26 };
//   27 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   28 const SimpleDescriptionFormat_t GenericApp_SimpleDesc = {
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 2
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 0
        DATA16
        DW 0H
//   29   GENERICAPP_ENDPOINT,                      //∂À¥Æø⁄∫≈
//   30   GENERICAPP_PROFID,                        //”¶”√πÊ∑∂ID
//   31   GENERICAPP_DEVICEID,                      //”¶”√…Ë±∏ID
//   32   GENERICAPP_DEVICE_VERSION,                //”¶”√…Ë±∏∞Ê±æ∫≈
//   33   GENERICAPP_FLAGS,                          
//   34   GENERICAPP_MAX_CLUSTERS,                   // ‰»Î¥ÿ∞¸∫¨µƒ√¸¡Ó∏ˆ ˝
//   35   (cId_t *)GenericApp_ClusterList,           // ‰»Î¥ÿ¡–±Ì
//   36   0,                                         // ‰≥ˆ¥ÿ∞¸∫¨µƒ√¸¡Ó∏ˆ ˝
//   37   (cId_t *)NULL                              // ‰≥ˆ¥ÿ¡–±Ì
//   38 };
//   39 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   40 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   41 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   42 byte GenericApp_TaskID;
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   43 byte GenericApp_TransID;
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   44 uint8 nodenum = 0;
nodenum:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   45 uint16 addr[16];
addr:
        DS 32
        REQUIRE __INIT_XDATA_Z
//   46 
//   47 
//   48 void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pckt);
//   49 void GenericApp_SendTheMessage(void);
//   50 static void rxCB(uint8 port,uint8 event);
//   51 /*∫Ø ˝π¶ƒ‹£∫–≠µ˜∆˜–≠“È’ªœ‡πÿπ¶ƒ‹≥ı ºªØ*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   52 void GenericApp_Init(byte task_id)
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   53 {
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalLedBlink
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
//   54   halUARTCfg_t uartConfig;
//   55   GenericApp_TaskID       = task_id;                     //≥ı ºªØ»ŒŒÒµƒ”≈œ»º∂
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   56   GenericApp_TransID      = 0;                           //Ω´∑¢ÀÕ ˝æ›∞¸µƒ–Ú∫≈≥ı ºªØŒ™0£¨‘⁄ZigBee–≠“È’ª÷–£¨√ø∑¢ÀÕ“ª∏ˆ ˝æ›∞¸£¨∏√∑¢ÀÕ–Ú∫≈◊‘∂Øº”1
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   57   GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;    
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   58   GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   59   GenericApp_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   60   GenericApp_epDesc.latencyReq = noLatencyReqs;          //…œ ˆÀƒ–– «∂‘Ω⁄µ„√Ë ˆ∑˚Ω¯––≥ı ºªØ£¨∏Ò ΩΩœŒ™πÃ∂®£¨“ª∞„≤ª–Ë“™–ﬁ∏ƒ
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   61   afRegister(&GenericApp_epDesc);                          // π”√afRegister∫Ø ˝Ω´Ω⁄µ„√Ë ˆ∑˚Ω¯––◊¢≤·£¨÷ª”–◊¢≤·“‘∫Û£¨≤≈ø…“‘ π”√OSALÃ·π©µƒœµÕ≥∑˛ŒÒ£ª
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   62   
//   63   uartConfig.configured     = TRUE;                      //»∑∂®∂‘¥Æø⁄≤Œ ˝Ω¯––≈‰÷√
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
//   64   uartConfig.baudRate       = HAL_UART_BR_115200;        //¥Æø⁄≤®Ãÿ¬ Œ™115200
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x4
        MOVX    @DPTR,A
//   65   uartConfig.flowControl    = FALSE;                     //√ª”–¡˜øÿ÷∆
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   66   uartConfig.callBackFunc   = rxCB;                      //¥Æø⁄ªÿµ˜∫Ø ˝
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#??rxCB?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??rxCB?relay >> 8) & 0xff
        MOVX    @DPTR,A
//   67   HalUARTOpen(0,&uartConfig);                            //∏˘æ›uartConfigΩ·ππÃÂ±‰¡ø÷–µƒ≥…‘±£¨≥ı ºªØ¥Æø⁄0
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTOpen?relay
//   68   
//   69   HalLedBlink(HAL_LED_2,0,50,250);                       // πLEDµ∆2ø™ º…¡À∏
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0x6
        MOV     R5,#0x0
        MOV     R3,#0x32
        MOV     R2,#0x0
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
//   70 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   71 /*∫Ø ˝π¶ƒ‹£∫–≠µ˜∆˜Ω®¡¢Õ¯¬Á£¨≤¢∆Ù∂Ø ¬º˛¥¶¿ÌΩ¯≥Ã
//   72 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   73 UINT16 GenericApp_ProcessEvent(byte task_id,UINT16 events)
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//   74 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//   75  
//   76   afIncomingMSGPacket_t *MSGpkt;                          //∂®“Â“ª∏ˆ÷∏œÚΩ” ’œ˚œ¢Ω·ππÃÂµƒ÷∏’ÎMSGpkt£ª
//   77   if(events & SYS_EVENT_MSG)
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//   78   {
//   79     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);  //// π”√osal_msg_receive∫Ø ˝¥”œ˚œ¢∂”¡–…œΩ” ’œ˚œ¢£¨∏√œ˚œ¢÷–∞¸∫¨¡ÀΩ” ’µΩµƒŒﬁœﬂ ˝æ›∞¸
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//   80     while(MSGpkt)
//   81     {
//   82       switch(MSGpkt->hdr.event)
//   83       {
//   84        case ZDO_STATE_CHANGE:                           //∂‘Ω” ’µΩµƒœ˚œ¢¿‡–ÕΩ¯––≈–∂œ°£–≠µ˜∆˜ ’µΩZDO_STATE_CHANGEœ˚œ¢±Ì√˜◊ÈÕ¯≥…π¶
//   85           HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);         //–≠µ˜∆˜◊ÈÕ¯≥…π¶∫Û£¨LEDµ∆2≥£¡¡         
//   86         break;
//   87       case AF_INCOMING_MSG_CMD:                         //µ±–≠µ˜∆˜ ’µΩAF_INCOMING_MSG_CMDœ˚œ¢£¨±Ì√˜–≠µ˜∆˜ ’µΩ∆‰À¸Ω⁄µ„¥´π˝¿¥µƒ ˝æ›°£
//   88           GenericApp_MessageMSGCB(MSGpkt);              //∂‘ ’µΩµƒ ˝æ›Ω¯––¥¶¿Ì
??GenericApp_ProcessEvent_2:
        ; Setup parameters for call to function GenericApp_MessageMSGCB
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??GenericApp_MessageMSGCB?relay
//   89         break;
//   90       default:
//   91         break;
//   92       }
//   93       osal_msg_deallocate((uint8 *)MSGpkt);             //Ω” ’µΩµƒœ˚œ¢¥¶¿ÌÕÍ∫Û£¨æÕ–Ë“™ Õ∑≈œ˚œ¢À˘’ºæ›µƒ¥Ê¥¢ø’º‰
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//   94       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);  //¥¶¿ÌÕÍ“ª∏ˆœ˚œ¢∫Û£¨‘Ÿ¥”œ˚œ¢∂”¡–¿ÔΩ” ’œ˚œ¢£¨»ª∫Û∂‘∆‰Ω¯––œ‡”¶µƒ¥¶¿Ì£¨÷±µΩÀ˘”–œ˚œ¢∂º¥¶¿ÌÕÍŒ™÷π
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??GenericApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??GenericApp_ProcessEvent_2
        ADD     A,#0x49
        JNZ     ??GenericApp_ProcessEvent_3
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
        SJMP    ??GenericApp_ProcessEvent_3
//   95     }
//   96     return (events ^ SYS_EVENT_MSG);
??GenericApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_5
//   97   }
//   98   return 0;
??GenericApp_ProcessEvent_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??GenericApp_ProcessEvent_5:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//   99 }
//  100 /*∫Ø ˝π¶ƒ‹£∫–≠µ˜∆˜ ’µΩΩ⁄÷’∂Àµ„∑¢π˝¿¥µƒ ˝æ›≤¢¥”¥Æø⁄0¥Ú”°≥ˆ¿¥£¨
//  101  –≠µ˜∆˜±£¥Ê”…÷’∂ÀΩ⁄µ„…œ¥´µƒ◊‘…Ì∂Ãµÿ÷∑
//  102 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  103 void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt)
GenericApp_MessageMSGCB:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_MessageMSGCB
        CODE
//  104 {
        FUNCALL GenericApp_MessageMSGCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 142, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 142, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 139, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 139, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 142, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 142, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 128
        MOV     A,#-0x80
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 139)
//  105   char buf[128] = 0;                          //Ω” ’ ˝æ›ª∫≥Â«¯
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>` & 0xff
        MOV     A,#-0x80
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  106   char i;
//  107   switch(pkt->clusterId)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?US_SWITCH_DENSE
`?<Jumptable for GenericApp_MessageMSGCB>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        1
        DATA
        DATA8
        DATA
        DATA8
        DB        1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??GenericApp_MessageMSGCB_0
        DATA
        DATA16
        DATA
        DATA16
        DW        ??GenericApp_MessageMSGCB_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??GenericApp_MessageMSGCB_2
        CODE
//  108   {
//  109   case GENERICAPP_CLUSTERID_1:              // ˝æ›∫≈Œ™GENERICAPP_CLUSTERID_2±Ì√˜ «”√ªß ˝æ›
//  110     osal_memcpy(buf,pkt->cmd.Data,pkt->cmd.DataLength);  //Ω´ ’µΩµƒ¥”÷’∂ÀΩ⁄µ„¥´π˝¿¥µƒ ˝æ›øΩ±¥µΩbuf÷–
??GenericApp_MessageMSGCB_1:
        MOV     A,R2
        ADD     A,#0x1f
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_0:
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 142)
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 139)
//  111     HalUARTWrite(0,buf,pkt->cmd.DataLength);     //¥”¥Æø⁄0¥Ú”°≥ˆΩ” ’µΩµƒ ˝æ› 
        ; Setup parameters for call to function HalUARTWrite
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  112     break;
        SJMP    ??GenericApp_MessageMSGCB_0
//  113   case GENERICAPP_CLUSTERID_2:                  //Ω⁄µ„◊‘…Ìµÿ÷∑–≈œ¢µƒ ˝æ›∫≈Œ™GENERICAPP_CLUSTERID_1
//  114     osal_memcpy(buf,pkt->cmd.Data,pkt->cmd.DataLength);
??GenericApp_MessageMSGCB_2:
        ; Setup parameters for call to function osal_memcpy
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_1:
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 142)
        MOV     A,R2
        ADD     A,#0x1f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 139)
//  115     i = buf[0];
//  116     addr[i] = buf[1] *256 + buf[2];
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        ADD     A,R2
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_2:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  117     break;
//  118   
//  119   }
//  120 }
??GenericApp_MessageMSGCB_0:
        MOV     A,#-0x80
        CFI EndBlock cfiBlock2
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 139)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Valid
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 139)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 139)
        CFI Block cfiPicker6 Using cfiCommon1
        CFI (cfiPicker6) NoFunction
        CFI (cfiPicker6) Picker
        MOV     A,R2
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiPicker6
//  121 /*∫Ø ˝π¶ƒ‹£∫”√”⁄–≠µ˜∆˜∂¡»°¥Æø⁄ ˝æ›≤¢Ω´ ˝æ›∑¢ÀÕ≥ˆ»•*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  122 static void rxCB(uint8 port,uint8 event)
rxCB:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function rxCB
        CODE
//  123 {
        FUNCALL rxCB, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 152, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 152, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rxCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 155, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 155, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rxCB, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 161, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 161, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 141
        MOV     A,#0x73
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 152)
//  124     uint8 buf[128];
//  125     uint8 len = 0,i=0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  126     afAddrType_t my_DstAddr;               //∂®“Â“ª∏ˆafAddrType_t¿‡–ÕµƒΩ·ππÃÂ£¨”√”⁄∂®“Â∑¢ÀÕΩ⁄µ„µƒ∑¢ÀÕ∑Ω Ω£¨”Îƒø±ÍΩ⁄µ„µƒµÿµÿ÷∑
//  127     len = HalUARTRead(0,buf,128);           //∂¡»°¥Æø⁄ ˝æ›£¨≤¢Ω´ ˝æ›¥Ê¥¢‘⁄bufª∫≥Â«¯÷–
        ; Setup parameters for call to function HalUARTRead
        MOV     R4,#-0x80
        MOV     R5,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTRead?relay
        MOV     A,R2
        MOV     R6,A
//  128     if(len != 0)
        JNZ     $+5
        LJMP    ??rxCB_0 & 0xFFFF
//  129     {  
//  130       osal_memcpy(&i,buf,1);
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 155)
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 152)
//  131       my_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;  //∂®“Â∑¢ÀÕ∑Ω ΩŒ™µ•≤•∑Ω Ω£ªœ‡”¶µƒªπ”–π„≤•°¢◊È≤•µƒ∑Ω Ω
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  132       my_DstAddr.endPoint = GENERICAPP_ENDPOINT;  //≥ı ºªØ∂Àø⁄∫≈
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xa
        MOVX    @DPTR,A
//  133       my_DstAddr.addr.shortAddr = addr[i];        //ƒø±ÍΩ⁄µ„∂Ãµÿ÷∑
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     C
        LCALL   ?Subroutine2 & 0xFFFF
??CrossCallReturnLabel_3:
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  134       AF_DataRequest(&my_DstAddr,&GenericApp_epDesc,GENERICAPP_CLUSTERID_1,
//  135                    len-1,buf+1,&GenericApp_TransID,AF_DISCV_ROUTE,AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 153)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 155)
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 157)
        MOV     A,R6
        ADD     A,#-0x1
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,#-0x1
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 159)
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 161)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 152)
//  136 
//  137     }
//  138 }
??rxCB_0:
        MOV     A,#-0x73
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiCond8 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 139)
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond9) CFA_SP SP+0
        CFI (cfiCond9) CFA_XSP16 add(XSP16, 152)
        CFI Block cfiPicker10 Using cfiCommon1
        CFI (cfiPicker10) NoFunction
        CFI (cfiPicker10) Picker
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,#addr & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(addr >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiPicker10

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_MessageMSGCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxCB

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0

        END
//  139 
//  140 
// 
// 679 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
// 144 bytes in segment XDATA_ROM_C
//  42 bytes in segment XDATA_Z
// 
// 703 bytes of CODE  memory
// 144 bytes of CONST memory
//  42 bytes of XDATA memory
//
//Errors: none
//Warnings: 2
