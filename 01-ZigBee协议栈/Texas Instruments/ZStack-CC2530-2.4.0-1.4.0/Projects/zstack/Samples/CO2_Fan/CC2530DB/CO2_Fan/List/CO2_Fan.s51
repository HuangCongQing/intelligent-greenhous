///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        11/Dec/2018  11:18:24 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01 /
//                          -ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4 /
//                          .0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530DB /
//                          \CO2_Fan.c                                        /
//    Command line       =  -f "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬ /
//                          Î\01-ZigBee–≠“È’ª\Texas                           /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\..\..\..\Tools\CC25 /
//                          30DB\f8wEndev.cfg" (-DCPU32MHZ                    /
//                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3        /
//                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f         /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\Tools\CC2530DB\f8wConfig.cfg"          /
//                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0     /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xAA34                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03 /
//                          -≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas       /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\CO2_Fan.c" -D       /
//                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D           /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC          /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\CO2_Fan\List\" -lA "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥ /
//                          £”√π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas         /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\CO2_Fan\List\"      /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\CO2_Fan\Obj\" -e --no_code_motion --debug       /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\" -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ /
//                          ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas                       /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\..\Source\" -I      /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\ZMain\TI2530DB\" -I                    /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\hal\include\" -I      /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\hal\target\CC2530EB\" /
//                           -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙ /
//                          ¬Î\01-ZigBee–≠“È’ª\Texas                          /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\..\..\..\..\..\Comp /
//                          onents\mac\include\" -I                           /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\mac\high_level\" -I   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\mac\low_level\srf04\" /
//                           -I "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙ /
//                          ¬Î\01-ZigBee–≠“È’ª\Texas                          /
//                          Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zs /
//                          tack\Samples\CO2_Fan\CC2530DB\..\..\..\..\..\Comp /
//                          onents\mac\low_level\srf04\single_chip\" -I       /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\mt\" -I               /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\osal\include\" -I     /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\osal\mcu\ccsoc\" -I   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\services\saddr\" -I   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\services\sdata\" -I   /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\af\" -I         /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\nwk\" -I        /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sapi\" -I       /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sec\" -I        /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sys\" -I        /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\stack\zdo\" -I        /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\zmac\" -I             /
//                          "F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\0 /
//                          1-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2. /
//                          4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530D /
//                          B\..\..\..\..\..\Components\zmac\f8w\" -Ohz       /
//                          --require_prototypes                              /
//    List file          =  F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01 /
//                          -ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4 /
//                          .0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530DB /
//                          \CO2_Fan\List\CO2_Fan.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME CO2_Fan

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC ??MSG_Handler?relay
        FUNCTION ??MSG_Handler?relay,0203H
        PUBLIC ??Send_Value?relay
        FUNCTION ??Send_Value?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        PUBLIC MSG_Handler
        FUNCTION MSG_Handler,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 44, STACK
        PUBLIC Send_Value
        FUNCTION Send_Value,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 166, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
afRegister          SYMBOL "afRegister"
CO2_init            SYMBOL "CO2_init"
Fan_init            SYMBOL "Fan_init"
HalLedBlink         SYMBOL "HalLedBlink"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_set_event      SYMBOL "osal_set_event"
HalLedSet           SYMBOL "HalLedSet"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_memcpy         SYMBOL "osal_memcpy"
Open_Fan            SYMBOL "Open_Fan"
Close_Fan           SYMBOL "Close_Fan"
GetADC              SYMBOL "GetADC"
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
sprintf             SYMBOL "sprintf"
strlen              SYMBOL "strlen"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??CO2_init?relay    SYMBOL "?relay", CO2_init
??Close_Fan?relay   SYMBOL "?relay", Close_Fan
??Fan_init?relay    SYMBOL "?relay", Fan_init
??GetADC?relay      SYMBOL "?relay", GetADC
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
??Open_Fan?relay    SYMBOL "?relay", Open_Fan
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??sprintf?relay     SYMBOL "?relay", sprintf
??strlen?relay      SYMBOL "?relay", strlen
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent
MSG_Handler         SYMBOL "MSG_Handler"
??MSG_Handler?relay SYMBOL "?relay", MSG_Handler
Send_Value          SYMBOL "Send_Value"
??Send_Value?relay  SYMBOL "?relay", Send_Value

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN CO2_init
        FUNCTION CO2_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Fan_init
        FUNCTION Fan_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Open_Fan
        FUNCTION Open_Fan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Close_Fan
        FUNCTION Close_Fan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN GetADC
        FUNCTION GetADC,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 157, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 157, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 161, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 162, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 166, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??CO2_init?relay
        FUNCTION ??CO2_init?relay,00H
        EXTERN ??Close_Fan?relay
        FUNCTION ??Close_Fan?relay,00H
        EXTERN ??Fan_init?relay
        FUNCTION ??Fan_init?relay,00H
        EXTERN ??GetADC?relay
        FUNCTION ??GetADC?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??Open_Fan?relay
        FUNCTION ??Open_Fan?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H

// F:\¥ÛÀƒ\01Œ¬ “¥Û≈Ô◊ ¡œ\03-≥£”√π§æﬂ\03-œµÕ≥¥˙¬Î\01-ZigBee–≠“È’ª\Texas Instruments\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\CO2_Fan\CC2530DB\CO2_Fan.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDProfile.h"
//    5 #include "ZDObject.h"
//    6 #include <string.h>
//    7 #include "Coordinator.h"
//    8 #include "DebugTrace.h"
//    9 
//   10 #if !defined(WIN32)
//   11 #include "OnBoard.h"
//   12 #endif
//   13 
//   14 #include "hal_lcd.h"
//   15 #include "hal_led.h"
//   16 #include "hal_key.h"
//   17 #include "hal_uart.h"
//   18 #include "stdio.h"
//   19 #include "CO2.h"
//   20 #include "Fan.h"
//   21 
//   22 #include "aps_groups.h"
//   23 #define  SEND_DATA_EVENT 0X01
//   24 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
//   25 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] = 
GenericApp_ClusterList:
        DATA16
        DW 1
        DW 2
//   26 {
//   27   GENERICAPP_CLUSTERID_1,GENERICAPP_CLUSTERID_2
//   28 };

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   29 const SimpleDescriptionFormat_t GenericApp_SimpleDesc = 
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 0
        DATA16
        DW 0H
        DATA8
        DB 2
        DATA16
        DW GenericApp_ClusterList
//   30 {
//   31   GENERICAPP_ENDPOINT,             //∂Àø⁄∫≈
//   32   GENERICAPP_PROFID,               //”¶”√πÊ∑∂ID
//   33   GENERICAPP_DEVICEID,             //”¶”√…Ë±∏ID
//   34   GENERICAPP_DEVICE_VERSION,       //”¶”√…Ë±∏∞Ê±æ∫≈
//   35   GENERICAPP_FLAGS,
//   36   0,                              // ‰»Î¥ÿ∞¸∫¨µƒ√¸¡Ó∏ˆ ˝
//   37   (cId_t *)NULL,                  // ‰»Î¥ÿ¡–±Ì
//   38   GENERICAPP_MAX_CLUSTERS,        // ‰≥ˆ¥ÿ∞¸∫¨µƒ√¸¡Ó∏ˆ ˝
//   39   (cId_t *)GenericApp_ClusterList // ‰≥ˆ¥ÿ¡–±Ì
//   40 };
//   41 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   42 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   43 byte GenericApp_TaskID;
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   44 byte GenericApp_TransID;
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   45 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   46 
//   47 void Send_Value(void);
//   48 void MSG_Handler(afIncomingMSGPacket_t *pkt);
//   49 
//   50 
//   51 /*∫Ø ˝π¶ƒ‹£∫–≠“È’ªœµÕ≥π¶ƒ‹≥ı ºªØ*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   52 void GenericApp_Init(byte task_id)
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   53 {
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, CO2_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, Fan_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalLedBlink
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   54   halUARTCfg_t uartConfig;
//   55   
//   56   GenericApp_TaskID       = task_id;   //≥ı ºªØ»ŒŒÒµƒ”≈œ»º∂
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   57   GenericApp_NwkState     = DEV_INIT; //∂®“Â∏√Ω⁄µ„Œ™÷’∂ÀΩ⁄µ„
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   58   GenericApp_TransID      = 0;       //Ω´∑¢ÀÕ ˝æ›∞¸µƒ–Ú∫≈≥ı ºªØŒ™0£¨‘⁄ZigBee–≠“È’ª÷–£¨√ø∑¢ÀÕ“ª∏ˆ ˝æ›∞¸£¨∏√∑¢ÀÕ–Ú∫≈◊‘∂Øº”1
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   59   GenericApp_epDesc.endPoint  = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   60   GenericApp_epDesc.task_id   = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   61   GenericApp_epDesc.simpleDesc = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   62   GenericApp_epDesc.latencyReq  = noLatencyReqs; //…œ ˆÀƒ–– «∂‘Ω⁄µ„√Ë ˆ∑˚Ω¯––≥ı ºªØ£¨∏Ò ΩΩœŒ™πÃ∂®£¨“ª∞„≤ª–Ë“™–ﬁ∏ƒ
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   63   afRegister(&GenericApp_epDesc);               // π”√afRegister∫Ø ˝Ω´Ω⁄µ„√Ë ˆ∑˚Ω¯––◊¢≤·£¨÷ª”–◊¢≤·“‘∫Û£¨≤≈ø…“‘ π”√OSALÃ·π©µƒœµÕ≥∑˛ŒÒ£ª
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   64   
//   65   CO2_init();
        ; Setup parameters for call to function CO2_init
        LCALL   ??CO2_init?relay
//   66   Fan_init();
        ; Setup parameters for call to function Fan_init
        LCALL   ??Fan_init?relay
//   67   HalLedBlink(HAL_LED_2,0,50,250);   // πLEDµ∆2ø™ º…¡À∏
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0x6
        MOV     R5,#0x0
        MOV     R3,#0x32
        MOV     R2,#0x0
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
//   68 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   69 /*∫Ø ˝π¶ƒ‹£∫÷’∂ÀΩ⁄µ„◊¥Ã¨∑¢…˙±‰ªØ£¨Ω¯––◊ÈÕ¯*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   70 UINT16 GenericApp_ProcessEvent(byte task_id,UINT16 events)
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//   71 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, MSG_Handler
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, Send_Value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//   72   afIncomingMSGPacket_t *MSGpkt; //∂®“Â“ª∏ˆ÷∏œÚΩ” ’œ˚œ¢Ω·ππÃÂµƒ÷∏’ÎMSGpkt£ª
//   73   if(events & SYS_EVENT_MSG)
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//   74   {
//   75     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);  // π”√osal_msg_receive∫Ø ˝¥”œ˚œ¢∂”¡–…œΩ” ’œ˚œ¢£¨∏√œ˚œ¢÷–∞¸∫¨¡ÀΩ” ’µΩµƒŒﬁœﬂ ˝æ›∞¸
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//   76     while(MSGpkt)
//   77     {
//   78       switch(MSGpkt->hdr.event)
//   79       {
//   80       case ZDO_STATE_CHANGE: //∂‘Ω” ’µΩµƒœ˚œ¢¿‡–ÕΩ¯––≈–∂œ°£÷’∂ÀΩ⁄µ„ ’µΩZDO_STATE_CHANGEœ˚œ¢±Ì√˜≥…π¶º”»ÎÕ¯¬Á
//   81           osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT); //…Ë÷√“ª∏ˆSEND_DATA_EVENT£¨”√”⁄∆Ù∂Ø“ª∏ˆ∂® ±∆˜
//   82           HalLedSet(HAL_LED_2,HAL_LED_MODE_ON); //÷’∂ÀΩ⁄µ„º”»ÎÕ¯¬Á∫Û£¨LEDµ∆2≥£¡¡
//   83         break;
//   84         
//   85       case AF_INCOMING_MSG_CMD:  //µ±÷’∂ÀΩ⁄µ„ ’µΩAF_INCOMING_MSG_CMDœ˚œ¢£¨±Ì√˜÷’∂ÀΩ⁄µ„Ω” ’µΩ∆‰À¸Ω⁄µ„¥´π˝¿¥µƒ ˝æ›°£
//   86         MSG_Handler(MSGpkt);   //∂‘ ’µΩµƒ ˝æ›Ω¯––¥¶¿Ì
??GenericApp_ProcessEvent_2:
        ; Setup parameters for call to function MSG_Handler
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??MSG_Handler?relay
//   87         break;
//   88           
//   89       default:
//   90         break;
//   91       }
//   92       osal_msg_deallocate((uint8 *)MSGpkt); //Ω” ’µΩµƒœ˚œ¢¥¶¿ÌÕÍ∫Û£¨æÕ–Ë“™ Õ∑≈œ˚œ¢À˘’ºæ›µƒ¥Ê¥¢ø’º‰
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//   93       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive(GenericApp_TaskID);  //¥¶¿ÌÕÍ“ª∏ˆœ˚œ¢∫Û£¨‘Ÿ¥”œ˚œ¢∂”¡–¿ÔΩ” ’œ˚œ¢£¨»ª∫Û∂‘∆‰Ω¯––œ‡”¶µƒ¥¶¿Ì£¨÷±µΩÀ˘”–œ˚œ¢∂º¥¶¿ÌÕÍŒ™÷π
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??GenericApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??GenericApp_ProcessEvent_2
        ADD     A,#0x49
        JNZ     ??GenericApp_ProcessEvent_3
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
        SJMP    ??GenericApp_ProcessEvent_3
//   94     }
//   95     return (events ^ SYS_EVENT_MSG);
??GenericApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_5
//   96   }
//   97   if(events & SEND_DATA_EVENT)   //≈–∂œ ¬º˛Œ™”√ªß◊‘º∫∂®“Âµƒ ¬º˛
??GenericApp_ProcessEvent_0:
        MOV     A,R2
        MOV     C,0xE0 /* A   */.0
        JNC     ??GenericApp_ProcessEvent_6
//   98   {               
//   99     Send_Value();
        ; Setup parameters for call to function Send_Value
        LCALL   ??Send_Value?relay
//  100     osal_start_timerEx(GenericApp_TaskID,SEND_DATA_EVENT,5000);//∆Ù∂Ø“ª∏ˆ∂® ±∆˜£¨µ±5000ms∫Û£¨ª·‘Ÿ¥Œ≤˙…˙“ª∏ˆSEND_DATA_EVENT ¬º˛
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x78
        MOV     R5,#0x13
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  101     return(events ^ SEND_DATA_EVENT);
        MOV     A,?V0 + 0
        XRL     A,#0x1
        MOV     R2,A
        MOV     R3,?V0 + 1
        SJMP    ??GenericApp_ProcessEvent_5
//  102   }
//  103   return 0;
??GenericApp_ProcessEvent_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
??GenericApp_ProcessEvent_5:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  104 }
//  105 
//  106 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  107 void MSG_Handler(afIncomingMSGPacket_t *pkt)
MSG_Handler:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function MSG_Handler
        CODE
//  108 {
        FUNCALL MSG_Handler, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 44, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 44, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MSG_Handler, Open_Fan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL MSG_Handler, Close_Fan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 30
        MOV     A,#-0x1e
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 41)
//  109   char buf[30] = 0;      //Ω” ’ ˝æ›ª∫≥Â«¯
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>` & 0xff
        MOV     A,#0x1e
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  110   switch(pkt->clusterId)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??MSG_Handler_0
        INC     DPTR
        MOVX    A,@DPTR
??MSG_Handler_0:
        JNZ     ??MSG_Handler_1
//  111   {
//  112   case GENERICAPP_CLUSTERID_1:  // ˝æ›∫≈Œ™GENERICAPP_CLUSTERID_1±Ì√˜ «”√ªß ˝æ›
//  113     osal_memcpy(buf,pkt->cmd.Data,pkt->cmd.DataLength); //Ω´ ’µΩµƒ¥”–≠µ˜∆˜¥´π˝¿¥µƒ ˝æ›øΩ±¥µΩbuf÷–
        ; Setup parameters for call to function osal_memcpy
        MOV     A,R2
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 44)
        MOV     A,R2
        ADD     A,#0x1f
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 41)
//  114     //HalUARTWrite(0,buf,pkt->cmd.DataLength); //¥”¥Æø⁄0¥Ú”°≥ˆΩ” ’µΩµƒ ˝æ›
//  115     if(buf[0] == 0x01)    //»Áπ˚ ’µΩµƒ ˝æ›Œ™0x01,‘Ú¥Úø™ÀÆ±√
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??MSG_Handler_2
//  116     {
//  117       Open_Fan();
        ; Setup parameters for call to function Open_Fan
        LCALL   ??Open_Fan?relay
        SJMP    ??MSG_Handler_1
//  118     }else if(buf[0] == 0x00)  //»Áπ˚ ’µΩµƒ ˝æ›Œ™0x00,‘Úπÿ±’ÀÆ±√
??MSG_Handler_2:
        MOVX    A,@DPTR
        JNZ     ??MSG_Handler_1
//  119     {
//  120       Close_Fan();
        ; Setup parameters for call to function Close_Fan
        LCALL   ??Close_Fan?relay
//  121     }
//  122     break;  
//  123   }
//  124 
//  125 }
??MSG_Handler_1:
        MOV     A,#0x1e
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  126 void Send_Value(void)
Send_Value:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function Send_Value
        CODE
//  127 {
        FUNCALL Send_Value, GetADC
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 157, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 157, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Send_Value, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 157, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 157, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Send_Value, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 161, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 161, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Send_Value, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 162, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 162, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Send_Value, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 166, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 166, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Send_Value, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 166, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 166, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 143
        MOV     A,#0x71
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 157)
//  128   float CO2_value; 
//  129   uint16 nwk;
//  130   uint8 buf[128]={0},addr[3]={0};
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>_1` & 0xff
        MOV     A,#-0x80
        LCALL   ?MOVE_LONG8_XDATA_XDATA
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>_2` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>_2` & 0xff
        MOV     A,#0x3
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  131   afAddrType_t my_DstAddr;      //∂®“Â“ª∏ˆafAddrType_t¿‡–ÕµƒΩ·ππÃÂ£¨”√”⁄∂®“Â∑¢ÀÕΩ⁄µ„µƒ∑¢ÀÕ∑Ω Ω£¨”Îƒø±ÍΩ⁄µ„µƒµÿµÿ÷∑
//  132   CO2_value = GetADC();   //ªÒ»°∂˛—ıªØÃº¥´∏–∆˜ ˝æ›
        ; Setup parameters for call to function GetADC
        LCALL   ??GetADC?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
//  133   nwk = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
//  134   addr[0] = 0x02;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x2
        MOVX    @DPTR,A
//  135   addr[1] = (uint8)(nwk>>8);
        DEC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R3
        MOVX    @DPTR,A
//  136   addr[2] = (uint8)(nwk & 0x00ff);
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        MOVX    @DPTR,A
//  137    
//  138   sprintf(buf,"∂˛—ıªØÃº≈®∂»£∫%0.2f",CO2_value);
        ; Setup parameters for call to function sprintf
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 161)
        MOV     R4,#`?<Constant "\\266\\376\\321\\365\\273\\257\\314\\274\\3` & 0xff
        MOV     R5,#(`?<Constant "\\266\\376\\321\\365\\273\\257\\314\\274\\3` >> 8) & 0xff
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 157)
//  139   my_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //∂®“Â∑¢ÀÕ∑Ω ΩŒ™µ•≤•∑Ω Ω£ªœ‡”¶µƒªπ”–π„≤•°¢◊È≤•µƒ∑Ω Ω
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  140   my_DstAddr.endPoint = GENERICAPP_ENDPOINT;    //≥ı ºªØ∂Àø⁄∫≈
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xa
        MOVX    @DPTR,A
//  141   my_DstAddr.addr.shortAddr = 0x0000;          //ƒø±ÍΩ⁄µ„∂Ãµÿ÷∑°£–≠µ˜∆˜µÿ∂Ãµÿ÷∑ º÷’Œ™0x0000
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  142   AF_DataRequest(&my_DstAddr,&GenericApp_epDesc,GENERICAPP_CLUSTERID_1,
//  143                  strlen(buf),buf,&GenericApp_TransID,AF_DISCV_ROUTE,AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 158)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 160)
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 162)
        ; Setup parameters for call to function strlen
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strlen?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 164)
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 166)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 157)
//  144   
//  145   AF_DataRequest(&my_DstAddr,&GenericApp_epDesc,GENERICAPP_CLUSTERID_2,
//  146                  3,addr,&GenericApp_TransID,AF_DISCV_ROUTE,AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 158)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 160)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 162)
        MOV     ?V0 + 0,#0x3
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 164)
        MOV     ?V0 + 0,#0x2
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 166)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 157)
//  147   
//  148   
//  149   /*AF_DataRequest‘≠–ŒŒ™£∫
//  150     afStatus_t AF_DataRequest( afAddrType_t *dstAddr, endPointDesc_t *srcEP,
//  151                            uint16 cID, uint16 len, uint8 *buf, uint8 *transID,
//  152                            uint8 options, uint8 radius )
//  153     stAddrŒ™£∫∑¢ÀÕƒøµƒµÿ÷∑£´∂Àµ„µÿ÷∑£®∂Àµ„∫≈£©∫Õ¥´ÀÕƒ£ Ω
//  154     cID£∫±ªProfile÷∏∂®µƒ”––ßµƒºØ»∫∫≈£ªø…ºÚµ•¿ÌΩ‚Œ™√¸¡ÓID∫≈
//  155     len:∑¢ÀÕ ˝æ›≥§∂»
//  156     buf :∑¢ÀÕ ˝æ›ª∫≥Â«¯
//  157     transID:»ŒŒÒID∫≈
//  158     */
//  159 }
        MOV     A,#-0x71
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??MSG_Handler?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    MSG_Handler

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Send_Value?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Send_Value

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>_1`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>_2`:
        DB 0
        DB 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\266\\376\\321\\365\\273\\257\\314\\274\\3`:
        DB "\266\376\321\365\273\257\314\274\305\250\266\310\243\272%0.2f"

        END
//  160 
//  161 
//  162 
//  163                           
// 
// 664 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
// 197 bytes in segment XDATA_ROM_C
//   9 bytes in segment XDATA_Z
// 
// 688 bytes of CODE  memory
// 197 bytes of CONST memory
//   9 bytes of XDATA memory
//
//Errors: none
//Warnings: 9
